--
-- PostgreSQL database dump
--

-- Dumped from database version 16.4 (Debian 16.4-1.pgdg120+2)
-- Dumped by pg_dump version 16.6 (Ubuntu 16.6-0ubuntu0.24.04.1)

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

--
-- Name: check_red_card_trigger(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.check_red_card_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
begin
    if new.type = 'yellow' then
        new.type := red_card(new.player_id, new.type);
        if new.type = 'red' then
            delete from cards where player_id = new.player_id and match_id = new.match_id and type = 'yellow' and card_id != new.card_id;
            update cards set type = 'red' where card_id = new.card_id;
        end if;
    end if;
    return new;
end;
$$;


ALTER FUNCTION public.check_red_card_trigger() OWNER TO postgres;

--
-- Name: points_calculator(integer, integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.points_calculator(team_score integer, opponent_score integer) RETURNS integer
    LANGUAGE plpgsql
    AS $$
begin
    IF team_score > opponent_score then
        return 3;
    elsif team_score = opponent_score then
        return 1;
    else
        return 0;
    end if;
end;
$$;


ALTER FUNCTION public.points_calculator(team_score integer, opponent_score integer) OWNER TO postgres;

--
-- Name: red_card(integer, character varying); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.red_card(p_player_id integer, p_type character varying) RETURNS character varying
    LANGUAGE plpgsql
    AS $$
declare
    yellow_card_count int;
begin
    if p_type = 'yellow' then
        select count(*) into yellow_card_count
        from cards
        where player_id = p_player_id and type = 'yellow';

        if yellow_card_count >= 2 then
            return 'red';
        else
            return 'yellow';
        end if;
    else
        return p_type;
    end if;
end;
$$;


ALTER FUNCTION public.red_card(p_player_id integer, p_type character varying) OWNER TO postgres;

--
-- Name: update_standings_after_match(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.update_standings_after_match() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
declare
    team1_points int;
    team2_points int;
begin
    team1_points := points_calculator(new.team1_score, new.team2_score);
    team2_points := points_calculator(new.team2_score, new.team1_score);

    update standings
    set matches_played = matches_played + 1,
        wins = wins + case when team1_points = 3 then 1 else 0 end,
        draws = draws + case when team1_points = 1 then 1 else 0 end,
        losses = losses + case when team1_points = 0 then 1 else 0 end,
        points = points + team1_points,
        goals_scored = goals_scored + new.team1_score,
        goals_conceded = goals_conceded + new.team2_score
    where team_id = new.team1_id and league_id = new.league_id;

    update standings
    set matches_played = matches_played + 1,
        wins = wins + case when team2_points = 3 then 1 else 0 end,
        draws = draws + case when team2_points = 1 then 1 else 0 end,
        losses = losses + case when team2_points = 0 then 1 else 0 end,
        points = points + team2_points,
        goals_scored = goals_scored + new.team2_score,
        goals_conceded = goals_conceded + new.team1_score
    where team_id = new.team2_id and league_id = new.league_id;

    return new;
end;
$$;


ALTER FUNCTION public.update_standings_after_match() OWNER TO postgres;

SET default_tablespace = '';

SET default_table_access_method = heap;

--
-- Name: cards; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.cards (
    card_id integer NOT NULL,
    match_id integer,
    player_id integer,
    type character varying(20) NOT NULL,
    "time" integer NOT NULL
);


ALTER TABLE public.cards OWNER TO postgres;

--
-- Name: cards_card_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.cards_card_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE public.cards_card_id_seq OWNER TO postgres;

--
-- Name: cards_card_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.cards_card_id_seq OWNED BY public.cards.card_id;


--
-- Name: goals; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.goals (
    goal_id integer NOT NULL,
    match_id integer,
    player_id integer,
    "time" integer NOT NULL,
    type character varying(20) NOT NULL
);


ALTER TABLE public.goals OWNER TO postgres;

--
-- Name: goals_goal_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.goals_goal_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE public.goals_goal_id_seq OWNER TO postgres;

--
-- Name: goals_goal_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.goals_goal_id_seq OWNED BY public.goals.goal_id;


--
-- Name: leagues; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.leagues (
    league_id integer NOT NULL,
    name character varying(100) NOT NULL,
    category character varying(50),
    season character varying(20),
    start_date date NOT NULL,
    end_date date NOT NULL
);


ALTER TABLE public.leagues OWNER TO postgres;

--
-- Name: leagues_league_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.leagues_league_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE public.leagues_league_id_seq OWNER TO postgres;

--
-- Name: leagues_league_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.leagues_league_id_seq OWNED BY public.leagues.league_id;


--
-- Name: matches; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.matches (
    match_id integer NOT NULL,
    league_id integer,
    match_date timestamp without time zone NOT NULL,
    team1_id integer,
    team2_id integer,
    team1_score integer,
    team2_score integer,
    referee_id integer,
    pitch_id integer
);


ALTER TABLE public.matches OWNER TO postgres;

--
-- Name: matches_match_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.matches_match_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE public.matches_match_id_seq OWNER TO postgres;

--
-- Name: matches_match_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.matches_match_id_seq OWNED BY public.matches.match_id;


--
-- Name: pitch; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.pitch (
    pitch_id integer NOT NULL,
    name character varying(50) NOT NULL,
    city character varying(50) NOT NULL,
    is_outdoor boolean DEFAULT true
);


ALTER TABLE public.pitch OWNER TO postgres;

--
-- Name: pitch_pitch_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.pitch_pitch_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE public.pitch_pitch_id_seq OWNER TO postgres;

--
-- Name: pitch_pitch_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.pitch_pitch_id_seq OWNED BY public.pitch.pitch_id;


--
-- Name: referees; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.referees (
    referee_id integer NOT NULL,
    user_id integer,
    license character varying(50) NOT NULL,
    years_of_experience integer DEFAULT 0 NOT NULL
);


ALTER TABLE public.referees OWNER TO postgres;

--
-- Name: referees_referee_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.referees_referee_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE public.referees_referee_id_seq OWNER TO postgres;

--
-- Name: referees_referee_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.referees_referee_id_seq OWNED BY public.referees.referee_id;


--
-- Name: standings; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.standings (
    standing_id integer NOT NULL,
    league_id integer,
    team_id integer,
    matches_played integer DEFAULT 0 NOT NULL,
    wins integer DEFAULT 0 NOT NULL,
    draws integer DEFAULT 0 NOT NULL,
    losses integer DEFAULT 0 NOT NULL,
    points integer DEFAULT 0 NOT NULL,
    goals_scored integer DEFAULT 0 NOT NULL,
    goals_conceded integer DEFAULT 0 NOT NULL
);


ALTER TABLE public.standings OWNER TO postgres;

--
-- Name: standings_standing_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.standings_standing_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE public.standings_standing_id_seq OWNER TO postgres;

--
-- Name: standings_standing_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.standings_standing_id_seq OWNED BY public.standings.standing_id;


--
-- Name: team_players; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.team_players (
    team_player_id integer NOT NULL,
    team_id integer,
    user_id integer,
    "position" character varying(30),
    join_date timestamp without time zone DEFAULT CURRENT_TIMESTAMP
);


ALTER TABLE public.team_players OWNER TO postgres;

--
-- Name: team_players_team_player_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.team_players_team_player_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE public.team_players_team_player_id_seq OWNER TO postgres;

--
-- Name: team_players_team_player_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.team_players_team_player_id_seq OWNED BY public.team_players.team_player_id;


--
-- Name: teams; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.teams (
    team_id integer NOT NULL,
    name character varying(100) NOT NULL,
    city_name character varying(50) NOT NULL,
    category character varying(50),
    captain_id integer,
    creation_date timestamp without time zone DEFAULT CURRENT_TIMESTAMP
);


ALTER TABLE public.teams OWNER TO postgres;

--
-- Name: teams_team_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.teams_team_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE public.teams_team_id_seq OWNER TO postgres;

--
-- Name: teams_team_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.teams_team_id_seq OWNED BY public.teams.team_id;


--
-- Name: users; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.users (
    user_id integer NOT NULL,
    first_name character varying(50) NOT NULL,
    last_name character varying(50) NOT NULL,
    email character varying(100) NOT NULL,
    password character varying(100) NOT NULL,
    phone_nr character varying(15),
    role character varying(20) NOT NULL,
    registrarion_date timestamp without time zone DEFAULT CURRENT_TIMESTAMP
);


ALTER TABLE public.users OWNER TO postgres;

--
-- Name: users_user_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.users_user_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE public.users_user_id_seq OWNER TO postgres;

--
-- Name: users_user_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.users_user_id_seq OWNED BY public.users.user_id;


--
-- Name: view_league_standings; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW public.view_league_standings AS
 SELECT l.name AS league_name,
    t.name AS team_name,
    s.matches_played,
    s.wins,
    s.draws,
    s.losses,
    s.points,
    s.goals_scored,
    s.goals_conceded
   FROM ((public.leagues l
     JOIN public.standings s ON ((l.league_id = s.league_id)))
     JOIN public.teams t ON ((s.team_id = t.team_id)));


ALTER VIEW public.view_league_standings OWNER TO postgres;

--
-- Name: view_match_details; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW public.view_match_details AS
 SELECT m.match_id,
    l.name AS league_name,
    t1.name AS team1_name,
    t2.name AS team2_name,
    m.team1_score,
    m.team2_score,
    m.match_date,
    (((r.first_name)::text || ' '::text) || (r.last_name)::text) AS referee_name,
    p.name AS pitch_name
   FROM (((((public.matches m
     JOIN public.leagues l ON ((m.league_id = l.league_id)))
     JOIN public.teams t1 ON ((m.team1_id = t1.team_id)))
     JOIN public.teams t2 ON ((m.team2_id = t2.team_id)))
     LEFT JOIN public.users r ON ((m.referee_id = r.user_id)))
     LEFT JOIN public.pitch p ON ((m.pitch_id = p.pitch_id)));


ALTER VIEW public.view_match_details OWNER TO postgres;

--
-- Name: view_teams_with_players; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW public.view_teams_with_players AS
 SELECT t.team_id,
    t.name AS team_name,
    t.city_name,
    t.category,
    (((u.first_name)::text || ' '::text) || (u.last_name)::text) AS captain_name,
    (((p.first_name)::text || ' '::text) || (p.last_name)::text) AS player_name,
    tp."position"
   FROM (((public.teams t
     LEFT JOIN public.users u ON ((t.captain_id = u.user_id)))
     LEFT JOIN public.team_players tp ON ((t.team_id = tp.team_id)))
     LEFT JOIN public.users p ON ((tp.user_id = p.user_id)));


ALTER VIEW public.view_teams_with_players OWNER TO postgres;

--
-- Name: cards card_id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.cards ALTER COLUMN card_id SET DEFAULT nextval('public.cards_card_id_seq'::regclass);


--
-- Name: goals goal_id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.goals ALTER COLUMN goal_id SET DEFAULT nextval('public.goals_goal_id_seq'::regclass);


--
-- Name: leagues league_id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.leagues ALTER COLUMN league_id SET DEFAULT nextval('public.leagues_league_id_seq'::regclass);


--
-- Name: matches match_id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.matches ALTER COLUMN match_id SET DEFAULT nextval('public.matches_match_id_seq'::regclass);


--
-- Name: pitch pitch_id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.pitch ALTER COLUMN pitch_id SET DEFAULT nextval('public.pitch_pitch_id_seq'::regclass);


--
-- Name: referees referee_id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.referees ALTER COLUMN referee_id SET DEFAULT nextval('public.referees_referee_id_seq'::regclass);


--
-- Name: standings standing_id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.standings ALTER COLUMN standing_id SET DEFAULT nextval('public.standings_standing_id_seq'::regclass);


--
-- Name: team_players team_player_id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.team_players ALTER COLUMN team_player_id SET DEFAULT nextval('public.team_players_team_player_id_seq'::regclass);


--
-- Name: teams team_id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.teams ALTER COLUMN team_id SET DEFAULT nextval('public.teams_team_id_seq'::regclass);


--
-- Name: users user_id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.users ALTER COLUMN user_id SET DEFAULT nextval('public.users_user_id_seq'::regclass);


--
-- Data for Name: cards; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.cards (card_id, match_id, player_id, type, "time") FROM stdin;
1	1	3	yellow	30
2	1	1	red	75
3	2	5	yellow	40
4	2	1	yellow	65
5	4	6	yellow	20
6	4	1	yellow	40
7	5	6	red	70
15	1	1	red	41
\.


--
-- Data for Name: goals; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.goals (goal_id, match_id, player_id, "time", type) FROM stdin;
2	1	3	45	regular
3	1	1	60	penalty
4	2	5	10	regular
5	2	5	80	own goal
6	4	1	12	regular
7	4	6	30	penalty
8	4	1	55	regular
\.


--
-- Data for Name: leagues; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.leagues (league_id, name, category, season, start_date, end_date) FROM stdin;
1	ekstraklasa	senior	2024/2025	2024-08-01	2025-05-31
3	liga mlodziezowa	junior	2024/2025	2024-09-01	2025-06-30
4	liga okregowa	senior	2024/2025	2024-09-15	2025-06-15
5	turniej mlodych talentow	junior	2024	2024-10-01	2024-12-20
2	i liga	senior	2024/2025	2024-08-10	2025-05-31
6	liga 2	senior	2024/2025	2024-08-01	2025-05-31
7	liga 1	senior	2024/2025	2024-08-01	2025-05-31
\.


--
-- Data for Name: matches; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.matches (match_id, league_id, match_date, team1_id, team2_id, team1_score, team2_score, referee_id, pitch_id) FROM stdin;
1	1	2024-08-10 18:00:00	1	2	2	1	2	1
2	1	2024-08-12 20:00:00	3	1	0	3	2	2
4	3	2024-08-20 19:00:00	4	3	3	2	2	1
5	3	2024-08-22 15:00:00	2	4	1	0	2	2
3	2	2024-08-15 16:00:00	2	3	2	2	2	3
6	1	2024-08-23 19:00:00	1	2	3	1	2	1
7	1	2024-08-23 19:00:00	3	2	3	1	2	1
\.


--
-- Data for Name: pitch; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.pitch (pitch_id, name, city, is_outdoor) FROM stdin;
1	orlik miejski	warszawa	t
2	hala sportowa	kraków	f
3	orlik	poznań	t
4	stadion 1	bielsko-biała	t
5	narodowe podwórko	warszawa	t
6	hala sportowa a	łódź	f
\.


--
-- Data for Name: referees; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.referees (referee_id, user_id, license, years_of_experience) FROM stdin;
1	2	uefa-ref amature	5
2	7	pzpn	3
\.


--
-- Data for Name: standings; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.standings (standing_id, league_id, team_id, matches_played, wins, draws, losses, points, goals_scored, goals_conceded) FROM stdin;
4	2	1	1	1	0	0	3	3	0
5	2	2	1	0	1	0	1	1	1
6	2	3	1	0	1	0	1	1	1
7	3	4	2	1	1	0	4	4	2
8	3	3	2	1	0	1	3	2	3
3	1	3	3	1	0	2	3	4	4
2	1	2	4	1	0	3	5	4	10
11	4	5	0	0	0	0	0	0	0
12	5	6	0	0	0	0	0	0	0
\.


--
-- Data for Name: team_players; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.team_players (team_player_id, team_id, user_id, "position", join_date) FROM stdin;
2	1	3	pomocnik	2025-01-20 18:05:23.182331
3	2	3	obrońca	2025-01-20 18:05:23.182331
4	2	5	bramkarz	2025-01-20 18:05:23.182331
5	3	5	napastnik	2025-01-20 18:05:23.182331
6	4	1	obrońca	2025-01-20 18:28:27.215341
7	4	6	pomocnik	2025-01-20 18:28:27.215341
9	9	8	napastnik	2025-01-22 21:10:58.147109
\.


--
-- Data for Name: teams; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.teams (team_id, name, city_name, category, captain_id, creation_date) FROM stdin;
1	orly warszawa	warszawa	amateur	1	2025-01-20 18:05:22.426526
2	lwy krakow	kraków	professional	3	2025-01-20 18:05:22.426526
4	rekord bielsko	bielsko-biała	junior	\N	2025-01-20 18:05:22.426526
5	wikingowie gdansk	gdańsk	amateur	4	2025-01-20 18:28:09.216757
6	akademia sukcesu w łódź	łódź	junior	\N	2025-01-20 18:28:09.216757
3	smoki poznan	poznań	professional	5	2025-01-20 18:05:22.426526
7	bayern	munich	amateur	\N	2025-01-21 13:25:02.456428
8	fc barcelona	barcelona	amateur	\N	2025-01-21 13:25:02.456428
9	bayern	munich	amateur	\N	2025-01-22 21:01:34.754079
10	fc barcelona	barcelona	amateur	\N	2025-01-22 21:01:34.754079
\.


--
-- Data for Name: users; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.users (user_id, first_name, last_name, email, password, phone_nr, role, registrarion_date) FROM stdin;
1	jan	kowalski	jan.kowalski@gmail;.com	haslo123	123-456-789	player	2025-01-20 18:05:21.643055
2	artur	nowak	vidal.arturo.nowak@yahoo.com	haslo456	987-654-321	referee	2025-01-20 18:05:21.643055
3	piotr	adamczyk	piotro.adamczyk@op.com	haslo789	555-123-456	player	2025-01-20 18:05:21.643055
4	mariusz	woźniak	mario.wozniak@og.com	hasloabc	111-222-333	admin	2025-01-20 18:05:21.643055
5	krzysztof	lewandowski	krzysztof.lewandowski@canva.com	haslodfg	444-555-666	player	2025-01-20 18:05:21.643055
6	tobiasz	mazur	tobzur@oracle.com	haslo000	444-127-888	player	2025-01-20 18:26:47.691725
7	marek	dudek	dudi@o2.com	haslo999	999-888-777	referee	2025-01-20 18:26:47.691725
8	robur	lewandowski	robercik@fcb.com	rl9rl9	123-123-123	player	2025-01-21 13:25:01.813852
\.


--
-- Name: cards_card_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.cards_card_id_seq', 15, true);


--
-- Name: goals_goal_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.goals_goal_id_seq', 8, true);


--
-- Name: leagues_league_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.leagues_league_id_seq', 7, true);


--
-- Name: matches_match_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.matches_match_id_seq', 7, true);


--
-- Name: pitch_pitch_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.pitch_pitch_id_seq', 6, true);


--
-- Name: referees_referee_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.referees_referee_id_seq', 2, true);


--
-- Name: standings_standing_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.standings_standing_id_seq', 12, true);


--
-- Name: team_players_team_player_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.team_players_team_player_id_seq', 9, true);


--
-- Name: teams_team_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.teams_team_id_seq', 10, true);


--
-- Name: users_user_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.users_user_id_seq', 8, true);


--
-- Name: cards cards_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.cards
    ADD CONSTRAINT cards_pkey PRIMARY KEY (card_id);


--
-- Name: goals goals_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.goals
    ADD CONSTRAINT goals_pkey PRIMARY KEY (goal_id);


--
-- Name: leagues leagues_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.leagues
    ADD CONSTRAINT leagues_pkey PRIMARY KEY (league_id);


--
-- Name: matches matches_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.matches
    ADD CONSTRAINT matches_pkey PRIMARY KEY (match_id);


--
-- Name: pitch pitch_name_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.pitch
    ADD CONSTRAINT pitch_name_key UNIQUE (name);


--
-- Name: pitch pitch_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.pitch
    ADD CONSTRAINT pitch_pkey PRIMARY KEY (pitch_id);


--
-- Name: referees referees_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.referees
    ADD CONSTRAINT referees_pkey PRIMARY KEY (referee_id);


--
-- Name: standings standings_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.standings
    ADD CONSTRAINT standings_pkey PRIMARY KEY (standing_id);


--
-- Name: team_players team_players_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.team_players
    ADD CONSTRAINT team_players_pkey PRIMARY KEY (team_player_id);


--
-- Name: teams teams_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.teams
    ADD CONSTRAINT teams_pkey PRIMARY KEY (team_id);


--
-- Name: users users_email_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.users
    ADD CONSTRAINT users_email_key UNIQUE (email);


--
-- Name: users users_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.users
    ADD CONSTRAINT users_pkey PRIMARY KEY (user_id);


--
-- Name: cards after_card_insert; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER after_card_insert AFTER INSERT ON public.cards FOR EACH ROW EXECUTE FUNCTION public.check_red_card_trigger();


--
-- Name: matches after_match_insert; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER after_match_insert AFTER INSERT ON public.matches FOR EACH ROW EXECUTE FUNCTION public.update_standings_after_match();


--
-- Name: cards cards_match_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.cards
    ADD CONSTRAINT cards_match_id_fkey FOREIGN KEY (match_id) REFERENCES public.matches(match_id) ON DELETE CASCADE;


--
-- Name: cards cards_player_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.cards
    ADD CONSTRAINT cards_player_id_fkey FOREIGN KEY (player_id) REFERENCES public.users(user_id) ON DELETE CASCADE;


--
-- Name: goals goals_match_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.goals
    ADD CONSTRAINT goals_match_id_fkey FOREIGN KEY (match_id) REFERENCES public.matches(match_id) ON DELETE CASCADE;


--
-- Name: goals goals_player_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.goals
    ADD CONSTRAINT goals_player_id_fkey FOREIGN KEY (player_id) REFERENCES public.users(user_id) ON DELETE CASCADE;


--
-- Name: matches matches_league_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.matches
    ADD CONSTRAINT matches_league_id_fkey FOREIGN KEY (league_id) REFERENCES public.leagues(league_id) ON DELETE CASCADE;


--
-- Name: matches matches_pitch_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.matches
    ADD CONSTRAINT matches_pitch_id_fkey FOREIGN KEY (pitch_id) REFERENCES public.pitch(pitch_id) ON DELETE SET NULL;


--
-- Name: matches matches_referee_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.matches
    ADD CONSTRAINT matches_referee_id_fkey FOREIGN KEY (referee_id) REFERENCES public.users(user_id) ON DELETE SET NULL;


--
-- Name: matches matches_team1_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.matches
    ADD CONSTRAINT matches_team1_id_fkey FOREIGN KEY (team1_id) REFERENCES public.teams(team_id) ON DELETE CASCADE;


--
-- Name: matches matches_team2_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.matches
    ADD CONSTRAINT matches_team2_id_fkey FOREIGN KEY (team2_id) REFERENCES public.teams(team_id) ON DELETE CASCADE;


--
-- Name: referees referees_user_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.referees
    ADD CONSTRAINT referees_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(user_id) ON DELETE CASCADE;


--
-- Name: standings standings_league_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.standings
    ADD CONSTRAINT standings_league_id_fkey FOREIGN KEY (league_id) REFERENCES public.leagues(league_id) ON DELETE CASCADE;


--
-- Name: standings standings_team_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.standings
    ADD CONSTRAINT standings_team_id_fkey FOREIGN KEY (team_id) REFERENCES public.teams(team_id) ON DELETE CASCADE;


--
-- Name: team_players team_players_team_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.team_players
    ADD CONSTRAINT team_players_team_id_fkey FOREIGN KEY (team_id) REFERENCES public.teams(team_id) ON DELETE CASCADE;


--
-- Name: team_players team_players_user_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.team_players
    ADD CONSTRAINT team_players_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(user_id) ON DELETE CASCADE;


--
-- Name: teams teams_captain_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.teams
    ADD CONSTRAINT teams_captain_id_fkey FOREIGN KEY (captain_id) REFERENCES public.users(user_id) ON DELETE SET NULL;


--
-- PostgreSQL database dump complete
--

